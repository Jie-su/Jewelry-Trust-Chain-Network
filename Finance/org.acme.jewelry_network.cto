/**
 * New model file
 */
namespace org.acme.jewelry_network

// BASE DEFINTIONS

concept JewelryDetail {
  //--> Minefield mine optional
  //--> Manufacturer make optional
  //--> Retailer sell optional
  //Model Type: Ring, Necklace, Bracelet
  o String ModelType
  //DiamondWeight: 0.5 ct, 1 ct ..ect
  o String DiamondWeight
  //Material: Gold, Sliver, Platinum
  o String Material
}

abstract participant Company identified by companyID{
  //Base defintion of a company
  //Can be set to retailer, Manufacturer, Regulator
  o String companyID
  o String companyName
  o String publicKey //-------------------------------------------------
}

abstract participant Company_2 identified by companyID{
  //Base defintion of a company
  //Can be set to retailer, Manufacturer, Regulator
  o String companyID
  o String companyName
  o String publicKey //-------------------------------------------------
}

participant Person identified by username {
  //Base definition of the person
  o String username
  o String phoneNumber optional
  o String email optional
  o String address optional
}

// Retailer DEFINITIONS
participant Retailer extends Company{
}

enum CustomerOrderStatus {
  //Different Stage of the retailer order(e.g. Customer -> Retailer)
  o PLACED
  o SCHEDULED_FOR_MANUFACTURE
  o OWNER_ASSIGNED
  o DELIVERED
}

asset CustomerOrder identified by customerOrderId {
  o String customerOrderId
  //o String customerPublickey
  o JewelryDetail jewelryDetail
  o CustomerOrderStatus customerOrderStatus
  --> Person customer
}

transaction CustomerPlaceOrder {
  o String customerOrderId optional
  //--> Retailer Cus_Retai
  o JewelryDetail jewelryDetail
  --> Retailer sell
  --> Person customer
}

event CustomerPlaceOrderEvent {
  o String customerOrderId
  o JewelryDetail jewelryDetail
  --> Person customer
}

transaction RetailerUpdateOrderStatus {
  o CustomerOrderStatus customerOrderStatus
  o String jin optional
  o String retailerId optional 
  o String retailerSign optional
  --> CustomerOrder customerOrder
}

event RetailerUpdateOrderStatusEvent {
  o CustomerOrderStatus customerOrderStatus
  o CustomerOrder customerOrder
}

// MANUFACTURE DEFINITIONS
participant Manufacturer extends Company_2{
}

enum RetailerOrderStatus {
  o PLACED
  o MANUFACTURING
  o JIN_ASSIGNED
  o DELIVERED
}

asset RetailerOrder identified by retailerOrderId {
  o String retailerOrderId
  //o String customerPublickey
  o JewelryDetail jewelryDetail
  o RetailerOrderStatus retailerOrderStatus
  --> Company retailer
}

transaction RetailerPlaceOrder {
  o String retailerOrderId optional
  //--> Manufacturer Retai_Manu
  o JewelryDetail jewelryDetail
  --> Manufacturer make
  --> Company retailer
}

event RetailerPlaceOrderEvent {
  o String retailerOrderId
  o JewelryDetail jewelryDetail
  --> Company retailer
}

transaction ManufacturerUpdateOrderStatus {
  o RetailerOrderStatus retailerOrderStatus
  //o String mineFieldId optional
  o String jin optional
  o String manufacturerId optional
  o String manufacturerSign optional
  --> RetailerOrder retailerOrder
}

event ManufacturerUpdateOrderStatusEvent{
  o RetailerOrderStatus retailerOrderStatus
  o RetailerOrder retailerOrder
}


// MINEFIELD DEFINITIONS
participant Minefield extends Company{
}

enum ManufacturerOrderStatus {
  o PLACED
  o MANUFACTURING
  o MINING
  o JIN_ASSIGNED
  o DELIVERED
}

asset ManufacturerOrder identified by manufacturerOrderId {
  o String manufacturerOrderId
  //o String retailerPublickey
  o JewelryDetail jewelryDetail
  o ManufacturerOrderStatus manufacturerOrderStatus
  --> Company_2 manufacturer
}

transaction ManufacturerPlaceOrder {   //----------------------------------------
  o String manufacturerOrderId optional
  //--> Minefield Manu_Mine
  o JewelryDetail jewelryDetail
  --> Minefield mine
  -->  Company_2 manufacturer
}

event ManufacturerPlaceOrderEvent {
  o String manufacturerOrderId
  o JewelryDetail jewelryDetail
  -->  Company_2 manufacturer
}

transaction MinefieldUpdateOrderStatus {  //----------------------------------------
  o ManufacturerOrderStatus manufacturerOrderStatus
  o String mineFieldId 
  o String jin optional
  o String mineFieldSign optional
  --> ManufacturerOrder manufacturerOrder
}

event MinefieldUpdateOrderStatusEvent{
  o ManufacturerOrderStatus manufacturerOrderStatus
  o ManufacturerOrder manufacturerOrder
}

// REGULATOR DEFINITIONS
participant Regulator extends Company{
}

enum JewelryStatus {
  o CERTIFICATION
  o SOLD_TO_CUSTOMER
  o STOLEN
}

asset Jewelry identified by jin {
  o String jin
  o String mineFieldId  optional//----------------------------------------
  o String mineFieldSign optional//----------------------------------------
  o String manufacturerId  optional//----------------------------------------
  o String manufacturerSign optional//----------------------------------------
  o String retailerId  optional//----------------------------------------
  o String retailerSign  optional//----------------------------------------
  o JewelryDetail jewelryDetail optional
  o JewelryStatus jewelryStatus optional
  --> Person owner optional
}

// SETUP FEMO
transaction SetupDemo {
}
