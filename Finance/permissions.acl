// rules about the customers 
rule CustomerMakeOrder {
    description: "Allow Persons to create and view orders"
    participant(p): "org.acme.jewelry_network.Person"
    operation: CREATE
    resource(o): "org.acme.jewelry_network.CustomerOrder"
    transaction(tx): "org.acme.jewelry_network.CustomerPlaceOrder"
    condition: (o.customer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule CustomerPlaceOrder {
    description: "Allow Persons to place orders and view they've done this"
    participant(p): "org.acme.jewelry_network.Person"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.CustomerPlaceOrder"
    condition: (o.customer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}
rule RetailerMakeOrder {
    description: "Allow retailer to create and view orders"
    participant(p): "org.acme.jewelry_network.Retailer"
    operation: CREATE
    resource(o): "org.acme.jewelry_network.RetailerOrder"
    transaction(tx): "org.acme.jewelry_network.RetailerPlaceOrder"
    condition: (o.retailer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}
rule RetailerReadselfOrder {
    description: "Allow retailer to view orders"
    participant(p): "org.acme.jewelry_network.Retailer"
    operation: READ
    resource(o): "org.acme.jewelry_network.RetailerOrder"
    
    condition: (o.retailer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule RetailerPlaceOrder {
    description: "Allow retailer to place orders and view they've done this"
    participant(p): "org.acme.jewelry_network.Retailer"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.RetailerPlaceOrder"
    condition: (o.retailer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}


rule CustomerReadOrder {
    description: "Allow Persons to place orders and view they've done this"
    participant(p): "org.acme.jewelry_network.Person"
    operation: READ
    resource(o): "org.acme.jewelry_network.CustomerOrder"
    condition: (o.customer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

// rules about the retailers 
rule RetailerUpdateOrder {
    description: "Allow retailers to view and update their own orders"
    participant(m): "org.acme.jewelry_network.Retailer"
    operation: UPDATE
    resource(o): "org.acme.jewelry_network.CustomerOrder"
    transaction(tx): "org.acme.jewelry_network.RetailerUpdateOrderStatus"
    condition: (o.retailer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}

rule RetailerUpdateOrderStatus {
    description: "Allow retailers to update customerOrder statuses and view they've done this"
    participant(m): "org.acme.jewelry_network.Retailer"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.RetailerUpdateOrderStatus"
    condition: (o.customerOrder.retailer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}


rule RetailerReadOrder {
    description: "Allow retailers to view and update their own orders"
    participant(m): "org.acme.jewelry_network.Retailer"
    operation: READ
    resource(o): "org.acme.jewelry_network.CustomerOrder"
    condition: (o.retailer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}

rule RetailerReadJewelries {
    description: "Allow manufacturers to create and view their jewelries"
    participant(m): "org.acme.jewelry_network.Retailer"
    operation: READ
    resource(v): "org.acme.jewelry_network.Jewelry"
    condition: (v.retailerId == m.getIdentifier())
    action: ALLOW
}
rule PersonReadJewelries {
    description: "Allow person to view their jewelries"
    participant(m): "org.acme.jewelry_network.Person"
    operation: READ
    resource(v): "org.acme.jewelry_network.Jewelry"
    condition: (v.owner.getIdentifier() == m.getIdentifier())
    action: ALLOW
}
rule RetailerCreateJewelries {
    description: "Allow retailer to create and view their jewelries"
    participant(m): "org.acme.jewelry_network.Retailer"
    operation: CREATE
    resource(v): "org.acme.jewelry_network.Jewelry"
    transaction(tx): "org.acme.jewelry_network.RetailerUpdateOrderStatus"
    condition: (tx.customerOrderStatus == "OWNER_ASSIGNED")
    action: ALLOW
}

// rules about the manufacturers

rule ManufacturerMakeOrder {
    description: "Allow Manufacturer to create and view orders"
    participant(p): "org.acme.jewelry_network.Manufacturer"
    operation: CREATE
    resource(o): "org.acme.jewelry_network.ManufacturerOrder"
    transaction(tx): "org.acme.jewelry_network.ManufacturerPlaceOrder"
    condition: (o.manufacturer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule ManufacturerPlaceOrder {
    description: "Allow Manufacturer to place orders "
    participant(p): "org.acme.jewelry_network.Manufacturer"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.ManufacturerPlaceOrder"
    condition: (o.manufacturer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}
rule ManufacturerUpdateOrder {
    description: "Allow manufacturers to view and update their own orders"
    participant(m): "org.acme.jewelry_network.Manufacturer"
    operation: UPDATE
    resource(o): "org.acme.jewelry_network.RetailerOrder"
    transaction(tx): "org.acme.jewelry_network.ManufacturerUpdateOrderStatus"
    condition: (o.manufacturer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}

rule ManufacturerUpdateOrderStatus {
    description: "Allow manufacturers to update retailerOrder statuses and view they've done this"
    participant(m): "org.acme.jewelry_network.Manufacturer"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.ManufacturerUpdateOrderStatus"
    condition: (o.retailerOrder.manufacturer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}
rule ManufacturerReadselfOrder {
    description: "Allow Manufacturer to view selforders"
    participant(p): "org.acme.jewelry_network.Manufacturer"
    operation: READ
    resource(o): "org.acme.jewelry_network.ManufacturerOrder"
    
    condition: (o.manufacturer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}


rule ManufacturerReadOrder {
    description: "Allow manufacturers to view the retailer order"
    participant(m): "org.acme.jewelry_network.Manufacturer"
    operation: READ
    resource(o): "org.acme.jewelry_network.RetailerOrder"
    condition: (o.manufacturer.getIdentifier() == m.getIdentifier())
    action: ALLOW
}



rule ManufacturerReadJewelries {
    description: "Allow manufacturers to create and view their jewelries"
    participant(m): "org.acme.jewelry_network.Manufacturer"
    operation: READ
    resource(v): "org.acme.jewelry_network.Jewelry"
    condition: (v.manufacturerId == m.getIdentifier())
    action: ALLOW
}



// rulers about the minefield
rule MinefieldReadJewelries {
    description: "Allow minefield to view their jewelries"
    participant(m): "org.acme.jewelry_network.Minefield"
    operation: READ
    resource(v): "org.acme.jewelry_network.Jewelry"
    condition: (v.mineFieldId == m.getIdentifier())
    action: ALLOW
}
rule MinefieldReadOrder {
    description: "Allow minefield to view the manufacturer order"
    participant(m): "org.acme.jewelry_network.Minefield"
    operation: READ
    resource(o): "org.acme.jewelry_network.ManufacturerOrder"
    condition: (o.minefield.getIdentifier() == m.getIdentifier())
    action: ALLOW
}


rule MinefieldUpdateOrderStatus {
    description: "Allow Minefield to view and update their own orders"
    participant(m): "org.acme.jewelry_network.Minefield"
    operation: UPDATE
    resource(o): "org.acme.jewelry_network.ManufacturerOrder"
    transaction(tx): "org.acme.jewelry_network.MinefieldUpdateOrderStatus"
    condition: (o.minefield.getIdentifier() == m.getIdentifier())
    action: ALLOW
}

rule MinefieldUpdateOrder {
    description: "Allow minefield to update manufacturerOrder statuses and view they've done this"
    participant(m): "org.acme.jewelry_network.Minefield"
    operation: CREATE, READ
    resource(o): "org.acme.jewelry_network.MinefieldUpdateOrderStatus"
    
    condition: (o.manufacturerOrder.minefield.getIdentifier() == m.getIdentifier())
    action: ALLOW
}




//   vision permerssion
rule PersonSeeRetailers {
    description: "Allow person see all the information about all the retailers"
    participant: "org.acme.jewelry_network.Person"
    operation: READ
    resource: "org.acme.jewelry_network.Retailer"
    action: ALLOW
}

rule PersonSeeManufacturer {
    description: "Allow person see all the information about all the manufacturers"
    participant: "org.acme.jewelry_network.Person"
    operation: READ
    resource: "org.acme.jewelry_network.Manufacturer"
    action: ALLOW
}

rule PersonSeeMinefield {
    description: "Allow person see all the information about all the Minefield"
    participant: "org.acme.jewelry_network.Person"
    operation: READ
    resource: "org.acme.jewelry_network.Minefield"
    action: ALLOW
}
rule RetailerSeeMinefield {
    description: "Allow retailer see all the information about all the Minefield"
    participant: "org.acme.jewelry_network.Retailer"
    operation: READ
    resource: "org.acme.jewelry_network.Minefield"
    action: ALLOW
}

rule RetailerSeeManufacturer {
    description: "Allow retailer see all the information about all the Manufacturers"
    participant: "org.acme.jewelry_network.Retailer"
    operation: READ
    resource: "org.acme.jewelry_network.Manufacturer"
    action: ALLOW
}

rule ManufacturerSeeMinefield {
    description: "Allow manufacturer see all the information about all the Minefield"
    participant: "org.acme.jewelry_network.Manufacturer"
    operation: READ
    resource: "org.acme.jewelry_network.Minefield"
    action: ALLOW
}





// rules for others, including systems
rule ParticipantsSeeSelves {
    description: "Let participants see themselves"
    participant(p): "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource(r): "org.hyperledger.composer.system.Participant"
    condition: (r.getIdentifier() == p.getIdentifier())
    action: ALLOW
}


rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule RegulatorAdminUser {
    description: "Let the regulator do anything"
    participant: "org.acme.jewelry_network.Regulator"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule System {
    description: "Grant all full access to system resources"
    participant: "org.**"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}